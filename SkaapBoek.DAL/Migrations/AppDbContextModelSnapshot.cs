// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkaapBoek.DAL;

namespace SkaapBoek.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SkaapBoek.Core.Child", b =>
                {
                    b.Property<int>("SheepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("SheepId1")
                        .HasColumnType("int");

                    b.HasKey("SheepId");

                    b.HasIndex("SheepId1");

                    b.ToTable("child");
                });

            modelBuilder.Entity("SkaapBoek.Core.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HexValue")
                        .IsRequired()
                        .HasColumnType("char(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("color");
                });

            modelBuilder.Entity("SkaapBoek.Core.Feed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CostPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("feed");
                });

            modelBuilder.Entity("SkaapBoek.Core.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("gender");
                });

            modelBuilder.Entity("SkaapBoek.Core.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("group");
                });

            modelBuilder.Entity("SkaapBoek.Core.Parent", b =>
                {
                    b.Property<int>("SheepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("SheepId1")
                        .HasColumnType("int");

                    b.HasKey("SheepId");

                    b.HasIndex("SheepId1");

                    b.ToTable("parent");
                });

            modelBuilder.Entity("SkaapBoek.Core.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("char(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("priority");
                });

            modelBuilder.Entity("SkaapBoek.Core.Relationship", b =>
                {
                    b.Property<int>("ChildId")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("ChildSheepId")
                        .HasColumnType("int");

                    b.Property<int>("ChildSheepId1")
                        .HasColumnType("int");

                    b.Property<int>("ParentSheepId")
                        .HasColumnType("int");

                    b.HasKey("ChildId", "ParentId");

                    b.HasIndex("ChildSheepId");

                    b.HasIndex("ChildSheepId1");

                    b.HasIndex("ParentId");

                    b.HasIndex("ParentSheepId");

                    b.ToTable("relationship");
                });

            modelBuilder.Entity("SkaapBoek.Core.Sheep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AcquireDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("FeedId")
                        .HasColumnType("int");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("SheepStatusId")
                        .HasColumnType("int");

                    b.Property<string>("TagNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("FeedId");

                    b.HasIndex("GenderId");

                    b.HasIndex("SheepStatusId");

                    b.ToTable("sheep");
                });

            modelBuilder.Entity("SkaapBoek.Core.SheepGroup", b =>
                {
                    b.Property<int>("SheepId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("SheepId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("sheep_group");
                });

            modelBuilder.Entity("SkaapBoek.Core.SheepStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("state");
                });

            modelBuilder.Entity("SkaapBoek.Core.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("char(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("status");
                });

            modelBuilder.Entity("SkaapBoek.Core.TaskInstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("DurationDays")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("PriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("SheepId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("TaskTemplateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("SheepId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TaskTemplateId");

                    b.ToTable("task_instance");
                });

            modelBuilder.Entity("SkaapBoek.Core.TaskTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("task_tamplate");
                });

            modelBuilder.Entity("SkaapBoek.Core.Child", b =>
                {
                    b.HasOne("SkaapBoek.Core.Sheep", "Sheep")
                        .WithMany()
                        .HasForeignKey("SheepId1");
                });

            modelBuilder.Entity("SkaapBoek.Core.Parent", b =>
                {
                    b.HasOne("SkaapBoek.Core.Sheep", "Sheep")
                        .WithMany()
                        .HasForeignKey("SheepId1");
                });

            modelBuilder.Entity("SkaapBoek.Core.Relationship", b =>
                {
                    b.HasOne("SkaapBoek.Core.Sheep", "Child")
                        .WithMany("Parents")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SkaapBoek.Core.Child", null)
                        .WithMany("ParentRelationships")
                        .HasForeignKey("ChildSheepId");

                    b.HasOne("SkaapBoek.Core.Child", null)
                        .WithMany("ChildRelationships")
                        .HasForeignKey("ChildSheepId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkaapBoek.Core.Sheep", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SkaapBoek.Core.Parent", null)
                        .WithMany("Relationships")
                        .HasForeignKey("ParentSheepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SkaapBoek.Core.Sheep", b =>
                {
                    b.HasOne("SkaapBoek.Core.Color", "Color")
                        .WithMany("Sheep")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkaapBoek.Core.Feed", "CurrentFeed")
                        .WithMany("Sheep")
                        .HasForeignKey("FeedId");

                    b.HasOne("SkaapBoek.Core.Gender", "Gender")
                        .WithMany("Sheep")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkaapBoek.Core.SheepStatus", "SheepStatus")
                        .WithMany("Sheep")
                        .HasForeignKey("SheepStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SkaapBoek.Core.SheepGroup", b =>
                {
                    b.HasOne("SkaapBoek.Core.Group", "Group")
                        .WithMany("SheepGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkaapBoek.Core.Sheep", "Sheep")
                        .WithMany("SheepGroups")
                        .HasForeignKey("SheepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SkaapBoek.Core.TaskInstance", b =>
                {
                    b.HasOne("SkaapBoek.Core.Group", "Group")
                        .WithMany("TaskInstances")
                        .HasForeignKey("GroupId");

                    b.HasOne("SkaapBoek.Core.Priority", "Priority")
                        .WithMany("Tasks")
                        .HasForeignKey("PriorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkaapBoek.Core.Sheep", "Sheep")
                        .WithMany("TaskInstances")
                        .HasForeignKey("SheepId");

                    b.HasOne("SkaapBoek.Core.Status", "Status")
                        .WithMany("Tasks")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkaapBoek.Core.TaskTemplate", "TaskTemplate")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
